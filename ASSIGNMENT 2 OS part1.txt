ASSIGNMENT 2

PART A
_______


What will following command do ?

1) echo "Hello, World!"

--> echo will print the statement
the output we will get 
Hello, World

2) name="Productive"
--> It will not print the output. It will only set name ="Productive"

3) touch file.txt
--> It will create a file

4) ls -a 
--> It will show all the content of directory including the hidden files and directories 

5) rm file.txt
--> It will remove or delete the file

6) cp file1.txt file2.txt
--> It  will copy the content of file1.txt to file2.txt

7) mv file.txt/path/to/directory/
--> This will mv file.txt to "path/to/directory"

8) chmod 755 script.sh 
-->This command gives permission.
the code 755 gives owner full permission of read, write and execute, the group and other user have read and execute permission.

9) grep "pattern" file.txt
--> this will search for pattern in the file.txt

10) Kill PID
--> This command is used to send signal to a process, asking it to terminate.

11) mkdir mydir && cd mydir && touch file.txt && echo "Hello, World!" >file.txt && cat file.txt 
--> mkdir mydir: Creates a directory named "mydir."

cd mydir: Changes the current working directory to "mydir."

touch file.txt: Creates an empty file named "file.txt" in the "mydir" directory.

echo "Hello, World!" > file.txt: Writes the text "Hello, World!" into the "file.txt" file. 

cat file.txt: Displays the contents of the "file.txt" file

12) ls -l | grep ".txt"
--> It is used to list detailed information about files in the current directory and then filter the output using grep to display only the lines containing ".txt".

13) cat file1.txt file2.txt | sort | uniq

--> It will add information or content of file1.txt and file2.txt togather 

14) ls -l | grep "^d" 
--> It is used to list the directory and files  in current directory, providing detailed information such as permissions,owner, size and time. grep will search for line that start with character d.

15)grep -r "pattern" /path/to/directory/

-->It is used to recursively search for a specified "pattern" in all files within the specified directory and its subdirectories. 

16) cat file1.txt file2.txt | sort | uniq â€“d 
--> is used to find and display the lines that are duplicated in both "file1.txt" and "file2.txt".

17)chmod 644 file.txt
--> read write execute = owner 
only read permission to group and other users

18)cp -r source_directory destination_directory
-->It is used to recursively copy the contents of one directory to another directory 

19) find /path/to/search -name "*.txt"
-->It is used to search for files  with the extension ".txt" within the specified directory and its subdirectories.

20) chmod u+x file.txt
--> It is use to give permission to user of execution

21) echo $PATH
-->Is used to display the current value of the PATH environment variable in a Unix-like operating system, including Linux. The PATH variable contains a colon-separated list of directories that the shell searches for executable files.


PART B

1. ls is used to list files and directories in a directory.
--> TRUE

2. mv is used to move files and directories.
-->TRUE

3. cd is used to copy files and directories.
-->FALSE

4. pwd stands for "print working directory" and displays the current directory.
-->TRUE

5. grep is used to search for patterns in files.
-->TRUE

6. chmod 755 file.txt gives read, write, and execute permissions to the owner, and read and execute permissions to group and others.
-->TRUE

7. mkdir -p directory1/directory2 creates nested directories, creating directory2 inside directory1 if directory1 does not exist.
-->FALSE

8. rm -rf file.txt deletes a file forcefully without confirmation. 
-->TRUE

Identify the Incorrect Commands:
1. chmodx is used to change file permissions.
-->INCORRECT
2. cpy is used to copy files and directories.
-->INCORRECT
3. mkfile is used to create a new file.
-->CORRECT
4. catx is used to concatenate files.
-->INCORRECT
5. rn is used to rename files. 
-->INCORRECT

PART C

Question 1: Write a shell script that prints "Hello, World!" to the terminal. 
-->
vi file1.sh
Esc +i
#!/bin/bash
echo "Hello, World!"

Question 2: Declare a variable named "name" and assign the value "CDAC Mumbai" to it. Print the
value of the variable.
-->
vi file1.sh
Esc +i
#!/bin/bash
echo "File name: $0"
echo "Parameter 1: $1"
echo "Parameter 2: $2"
echo "Quoted value: $@"
echo "Quoted value1: $*"
echo "Quoted value2: $#"
Esc
:wq
chmod +x file1.sh
./file1.sh CDAC Mumbai


Question 3: Write a shell script that takes a number as input from the user and prints it. 
vi file1.sh
Esc +i
#!/bin/bash
echo "Enter number"
read number
echo "The number is ${number}."
Esc
:wq
chmod +x file1.sh
./file1.sh


Write a shell script that performs addition of two numbers (e.g., 5 and 3) and prints the
result. 

-->
vi T4.sh
Esc +i
#!/bin/bash
echo "Enter num1:"
read num1
echo "Enter num2:"
read num2
echo "The sum of two numbers are"
((sum=$num1+$num2))
echo $sum


Question 5: Write a shell script that takes a number as input and prints "Even" if it is even, otherwise
prints "Odd". 
-->
vi T5.sh
Esc+i


#!/bin/bash
echo "Enter a number"
read num
if [[ ( $num -lt 100 ) && ( $num%2 -eq 0 ) ]]
then
        echo "Even number"
else
        echo "Odd number"
fi


Esc :wq
chmod +x T5.sh
./T5.sh

Question 6: Write a shell script that uses a for loop to print numbers from 1 to 5. 


--> 
vi T6.sh
Esc+i
#!/bin/bash
echo "Enter value of i"
read i
for (( i=1;i<=5;i++ ))
do
        echo $i;
done


Question 7: Write a shell script that uses a while loop to print numbers from 1 to 5. 
-->

vi T6.sh
Esc+i
#!/bin/bash

x=1
while [[ $x -lt 6 ]]
do echo $x
let x+=1
done




Question 8: Write a shell script that checks if a file named "file.txt" exists in the current directory. If it
does, print "File exists", otherwise, print "File does not exist". 
-->
vi T8.sh
#!/bin/bash

file_name="file.txt"

# Check if the file exists
if [ -e "$file_name" ]; then
    echo "File exists"
else
    echo "File does not exist"
fi

Question 9: Write a shell script that uses the if statement to check if a number is greater than 10 and
prints a message accordingly
-->

vi T9.sh

#!/bin/bash

echo "Enter a number"
read num
if [[ $num -gt 10 ]]
then
        echo "Greater than 10"
else
        echo "Less than 10"
fi


Question 10: Write a shell script that uses nested for loops to print a multiplication table for numbers
from 1 to 5. The output should be formatted nicely, with each row representing a number and each
column representing the multiplication result for that number. 

-->
#!/bin/bash

echo "Enter number"
read num
for (( i=0;i<1;i++ ))
do
        for (( j=1;j<=10;j++ ))
        do
                (( table=j*num ))
                echo "$num * $j = $table"
        done
done



Question 11: Write a shell script that uses a while loop to read numbers from the user until the user enters
a negative number. For each positive number entered, print its square. Use the break statement to exit the
loop when a negative number is entered. 


#!/bin/bash
while true
do
echo "Enter a number"
read num
if [[ "$num" -lt 0 ]]
then
        echo "Exiting the loop."
        break
fi

square=$((num*num))
echo "The Square of $num is : $square"
done


















